{
  "info": {
    "_postman_id": "3fabdc92-fa68-438e-91a2-f3b45645b182",
    "name": "EWM-Subscription",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Try to Publish event(1)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 or 403\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201,403]);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/admin/events/:eventId/publish",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            ":eventId",
            "publish"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Try to Publish event(2)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 or 403\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201,403]);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/admin/events/:eventId/publish",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            ":eventId",
            "publish"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Try to Publish event(3)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 or 403\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201,403]);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/admin/events/:eventId/publish",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            ":eventId",
            "publish"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "3"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Try to Publish event(4)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 or 403\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201,403]);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/admin/events/:eventId/publish",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            ":eventId",
            "publish"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "4"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Try to Publish event(5)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 or 403\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201,403]);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/admin/events/:eventId/publish",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            ":eventId",
            "publish"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "5"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Try to changeRequestModeration to false event(1) Copy",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"requestModeration\": \"false\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Try to changeRequestModeration to true event(2) Copy",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"requestModeration\": \"true\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Try to changeRequestModeration to false event(3)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"requestModeration\": \"false\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "3"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Try to changeRequestModeration to false event(4)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"requestModeration\": \"false\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "4"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Try to changeRequestModeration to false event(5)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"requestModeration\": \"false\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "5"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(2) get request to event(1)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/requests?eventId=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "requests"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "1"
            }
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(2) get request to event(2)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/requests?eventId=2",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "requests"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "2"
            }
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(3) get request to event(3)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/requests?eventId=3",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "requests"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "3"
            }
          ],
          "variable": [
            {
              "key": "userId",
              "value": "3"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(4) get request to event(4)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/requests?eventId=4",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "requests"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "4"
            }
          ],
          "variable": [
            {
              "key": "userId",
              "value": "4"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(5) get request to event(5)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/requests?eventId=5",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "requests"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "5"
            }
          ],
          "variable": [
            {
              "key": "userId",
              "value": "5"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(1) try to get a friendship with User(2)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/:friendId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            ":friendId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            },
            {
              "key": "friendId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(1) try to get a friendship with User(3)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/:friendId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            ":friendId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            },
            {
              "key": "friendId",
              "value": "3"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(1) try to get a friendship with User(4)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/:friendId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            ":friendId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            },
            {
              "key": "friendId",
              "value": "4"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(1) try to get a friendship with User(5)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/:friendId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            ":friendId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            },
            {
              "key": "friendId",
              "value": "5"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(2) confirm friendship with User(1)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/:friendId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            ":friendId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            },
            {
              "key": "friendId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(3) confirm friendship with User(1)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/:friendId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            ":friendId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "3"
            },
            {
              "key": "friendId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(4) reject friendship with User(1)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/:friendId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            ":friendId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "4"
            },
            {
              "key": "friendId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(1) get status of friendship with User(2)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "    \r",
              "});\r",
              "pm.test(\"Test result\", function () {\r",
              "    pm.expect(pm.response.text()).to.eql(\"CONFIRMED\")\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/:friendId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            ":friendId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            },
            {
              "key": "friendId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(1) get status of friendship with User(3)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "    \r",
              "});\r",
              "pm.test(\"Test result\", function () {\r",
              "    pm.expect(pm.response.text()).to.eql(\"CONFIRMED\")\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/:friendId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            ":friendId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            },
            {
              "key": "friendId",
              "value": "3"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(1) get status of friendship with User(4)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "    \r",
              "});\r",
              "pm.test(\"Test result\", function () {\r",
              "    pm.expect(pm.response.text()).to.eql(\"REJECTED\")\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/:friendId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            ":friendId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            },
            {
              "key": "friendId",
              "value": "4"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(1) get status of friendship with User(5)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
              "    \r",
              "});\r",
              "pm.test(\"Test result\", function () {\r",
              "    pm.expect(pm.response.text()).to.eql(\"PENDING\")\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/:friendId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            ":friendId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            },
            {
              "key": "friendId",
              "value": "5"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "User(1) get events of his friends",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
              "});\r",
              "pm.test(\"Test get events\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData.length).to.eql(2);\r",
              "\r",
              "    pm.expect(jsonData[0].id).to.eql(1);\r",
              "    pm.expect(jsonData[1].id).to.eql(3);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/:userId/sub/events",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "sub",
            "events"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
}